@{
    ViewData["Title"] = "Home";
}

<link href="@Url.Content("/css/map.css")" rel="stylesheet" type="text/css" />
<div id="map-container" style="position: relative;">
    <div class="boxSearch" style="position: absolute; top: 0; left: 0; right: 0; background: transparent; padding: 10px;z-index: 999;">
        <div class="row justify-content-center">
            <div class="col-12 col-md-10 col-lg-8">
                <div class="card card-sm rounded15">
                    <div class="card-body row no-gutters align-items-center">
                        <div class="col-auto">
                            <i class="fas fa-search h4 text-body"></i>
                        </div>
                        <div class="col">
                            <input class="form-control form-control-lg form-control-borderless" id="query"  type="search" placeholder="¿Buscar lugares o palabras clave aquí...?">
                        </div>
                        <div class="col-auto">
                            <button class="btn btn-lg gradientBlue rounded-lg" onclick="SearchPlaces()" type="submit">Search</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="map"></div>
</div>

<style>
    .form-control-borderless {
        border: none;
    }

        .form-control-borderless:focus {
            border: none;
            outline: none;
            box-shadow: none;
        }

        .form-control-borderless:hover {
            border: none;
            outline: none;
            box-shadow: none;
        }

        .form-control-borderless:active {
            border: none;
            outline: none;
            box-shadow: none;
        }
</style>

<script>
    // Inicializar el mapa
    var map = L.map('map').setView([0, 0], 14); // El valor 14 es el nivel de zoom inicial
    var marker;

    // Agregar una capa de mapa de OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Usar la geolocalización del navegador para obtener la ubicación del usuario
    navigator.geolocation.getCurrentPosition(function (location) {
        var lat = location.coords.latitude;
        var lng = location.coords.longitude;

        // Centrar el mapa en la ubicación del usuario
        map.setView([lat, lng]);
        // Agregar un marcador en la ubicación del usuario
        marker = L.marker([lat, lng]).addTo(map)
            .bindPopup(`¡Aquí estamos! (${lat},${lng})`)
            .openPopup();
    }, function (error) {
        // Manejar errores de geolocalización aquí
        alert('Error al obtener la ubicación del usuario.');
    });
    // Agregar un evento de clic para mover el marcador
    map.on('click', function (e) {
        if (marker) {
            // Mover el marcador al nuevo punto
            marker.setLatLng(e.latlng)
                .bindPopup(`¡Ahora Estamos Aquí! (${e.latlng.lat},${e.latlng.lng})`)
                .openPopup();
        }
    });
    const queryInput = document.getElementById('query');
    queryInput.addEventListener('keydown', (event) => {
        if (event.key === 'Enter') {
            SearchPlaces();
        }
    });
    function SearchPlaces() {
        var query = document.getElementById('query').value;
      //  var map = L.map('map').setView([0, 0], 2); // Inicializa el mapa con una vista predeterminada
        var markers = new L.LayerGroup(); // Capa para los marcadores
        var request = 
        {
            query: query,
            longitude: map.getCenter().lng,
            latitude: map.getCenter().lat
        }
        // Llama al controlador para obtener lugares
        $.ajax({
            method: "POST",
            url: "/Home/GetPlaces",
            data: request
        })
            .done(function (response) {
                var data = response;
                if (data.success && data.data) {
                    // Itera a través de los lugares y añade marcadores al mapa
                    data.data.forEach(place => {
                        var location = place.geocodes.main;
                        var name = place.name;
                        var latLng = L.latLng(location.latitude, location.longitude);

                        const pin = L.marker(latLng, {
                            icon: L.divIcon({
                                className: 'pin-map'
                            })
                        }).addTo(markers).bindPopup(name);
          
                        pin.on('click', function () {
                            markerOnClick(place);
                        });

                    });
                    markers.addTo(map); // Agrega los marcadores al mapa
                }

            });
    }

    function markerOnClick(place) {
        $(".boxSearch").hide()
        document.getElementById("SideBarRightContent").innerHTML = place.name;


        $.ajax({
            url: 'Home/DetailOfPlace',
            type: 'POST',
            data: place,
            success: function (result) {
                // Maneja el resultado (vista parcial) devuelto por el controlador
                $('#SideBarRightContent').html(result);
            },
            error: function (error) {
                // Maneja cualquier error que pueda ocurrir
                console.log(error);
            }
        });



        toggleSidebarRight();
    
    }

</script>

